{"version":3,"sources":["webpack:///./src/lib/audioUnlock.js","webpack:///./node_modules/core-js/modules/_to-index.js","webpack:///./node_modules/core-js/modules/_array-methods.js","webpack:///./node_modules/core-js/modules/_typed.js","webpack:///./node_modules/core-js/modules/_is-array.js","webpack:///./node_modules/core-js/modules/_object-gopd.js","webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///./node_modules/core-js/modules/_object-gopn.js","webpack:///./node_modules/core-js/modules/_array-copy-within.js","webpack:///./node_modules/core-js/modules/_array-species-create.js","webpack:///./node_modules/core-js/modules/_array-species-constructor.js","webpack:///./node_modules/core-js/modules/_typed-array.js","webpack:///./node_modules/core-js/modules/_typed-buffer.js"],"names":["__webpack_exports__","audioCtx","state","window","unlock","resume","then","document","body","removeEventListener","addEventListener","toInteger","__webpack_require__","toLength","module","exports","it","undefined","number","length","RangeError","ctx","IObject","toObject","asc","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","create","$this","callbackfn","that","val","res","O","self","f","index","result","push","Typed","global","hide","uid","TYPED","VIEW","ABV","ArrayBuffer","DataView","CONSTR","i","l","TypedArrayConstructors","split","prototype","cof","Array","isArray","arg","pIE","createDesc","toIObject","toPrimitive","has","IE8_DOM_DEFINE","gOPD","Object","getOwnPropertyDescriptor","P","e","call","toAbsoluteIndex","value","this","aLen","arguments","end","endPos","$keys","hiddenKeys","concat","getOwnPropertyNames","copyWithin","target","start","len","to","from","count","Math","min","inc","speciesConstructor","original","isObject","SPECIES","C","constructor","LIBRARY","fails","$export","$typed","$buffer","anInstance","propertyDesc","redefineAll","toIndex","classof","isArrayIter","getPrototypeOf","gOPN","getIterFn","wks","createArrayMethod","createArrayIncludes","ArrayIterators","Iterators","$iterDetect","setSpecies","arrayFill","arrayCopyWithin","$DP","$GOPD","dP","TypeError","Uint8Array","ARRAY_BUFFER","SHARED_BUFFER","BYTES_PER_ELEMENT","PROTOTYPE","ArrayProto","$ArrayBuffer","$DataView","arrayForEach","arrayFilter","arraySome","arrayEvery","arrayFind","arrayFindIndex","arrayIncludes","arrayIndexOf","arrayValues","values","arrayKeys","keys","arrayEntries","entries","arrayLastIndexOf","lastIndexOf","arrayReduce","reduce","arrayReduceRight","reduceRight","arrayJoin","join","arraySort","sort","arraySlice","slice","arrayToString","toString","arrayToLocaleString","toLocaleString","ITERATOR","TAG","TYPED_CONSTRUCTOR","DEF_CONSTRUCTOR","ALL_CONSTRUCTORS","TYPED_ARRAY","WRONG_LENGTH","$map","allocate","LITTLE_ENDIAN","Uint16Array","buffer","FORCED_SET","set","toOffset","BYTES","offset","validate","speciesFromList","list","fromList","addGetter","key","internal","get","_d","$from","source","step","iterator","mapfn","mapping","iterFn","next","done","$of","TO_LOCALE_BUG","$toLocaleString","apply","proto","every","fill","filter","find","predicate","findIndex","forEach","indexOf","searchElement","includes","separator","map","reverse","middle","floor","some","comparefn","subarray","begin","$begin","byteOffset","$slice","$set","arrayLike","src","$iterators","isTAIndex","String","$getDesc","$setDesc","desc","configurable","writable","enumerable","S","F","defineProperty","$TypedArrayPrototype$","KEY","wrapper","CLAMPED","NAME","GETTER","SETTER","TypedArray","Base","TAC","FORCED","TypedArrayPrototype","getter","data","v","o","setter","round","addElement","$offset","$length","byteLength","klass","$len","b","iter","Function","$nativeIterator","CORRECT_ITER_NAME","name","$iterator","G","W","of","DESCRIPTORS","setToStringTag","DATA_VIEW","WRONG_INDEX","Infinity","BaseBuffer","abs","pow","log","LN2","BUFFER","BYTE_LENGTH","BYTE_OFFSET","$BUFFER","$LENGTH","$OFFSET","packIEEE754","mLen","nBytes","m","c","eLen","eMax","eBias","rt","s","unpackIEEE754","nBits","NaN","unpackI32","bytes","packI8","packI16","packI32","packF64","packF32","view","isLittleEndian","numIndex","intIndex","store","_b","pack","conversion","ArrayBufferProto","j","$setInt8","setInt8","getInt8","setUint8","bufferLength","getUint8","getInt16","getUint16","getInt32","getUint32","getFloat32","getFloat64","setInt16","setUint16","setInt32","setUint32","setFloat32","setFloat64"],"mappings":"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","file":"js/chunk-0b65332c.479e9434.js","sourcesContent":["export default function(audioCtx) {\n  if (audioCtx.state === 'suspended' && 'ontouchstart' in window) {\n    const unlock = () => {\n      audioCtx.resume().then(() => {\n        document.body.removeEventListener('touchstart', unlock)\n        document.body.removeEventListener('touchend', unlock)\n      })\n    }\n    document.body.addEventListener('touchstart', unlock, false)\n    document.body.addEventListener('touchend', unlock, false)\n  }\n}\n","// https://tc39.github.io/ecma262/#sec-toindex\nvar toInteger = require('./_to-integer');\nvar toLength = require('./_to-length');\nmodule.exports = function (it) {\n  if (it === undefined) return 0;\n  var number = toInteger(it);\n  var length = toLength(number);\n  if (number !== length) throw RangeError('Wrong length!');\n  return length;\n};\n","// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx = require('./_ctx');\nvar IObject = require('./_iobject');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar asc = require('./_array-species-create');\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar uid = require('./_uid');\nvar TYPED = uid('typed_array');\nvar VIEW = uid('view');\nvar ABV = !!(global.ArrayBuffer && global.DataView);\nvar CONSTR = ABV;\nvar i = 0;\nvar l = 9;\nvar Typed;\n\nvar TypedArrayConstructors = (\n  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'\n).split(',');\n\nwhile (i < l) {\n  if (Typed = global[TypedArrayConstructors[i++]]) {\n    hide(Typed.prototype, TYPED, true);\n    hide(Typed.prototype, VIEW, true);\n  } else CONSTR = false;\n}\n\nmodule.exports = {\n  ABV: ABV,\n  CONSTR: CONSTR,\n  TYPED: TYPED,\n  VIEW: VIEW\n};\n","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n","var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n","// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\n\nmodule.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {\n  var O = toObject(this);\n  var len = toLength(O.length);\n  var to = toAbsoluteIndex(target, len);\n  var from = toAbsoluteIndex(start, len);\n  var end = arguments.length > 2 ? arguments[2] : undefined;\n  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);\n  var inc = 1;\n  if (from < to && to < from + count) {\n    inc = -1;\n    from += count - 1;\n    to += count - 1;\n  }\n  while (count-- > 0) {\n    if (from in O) O[to] = O[from];\n    else delete O[to];\n    to += inc;\n    from += inc;\n  } return O;\n};\n","// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = require('./_array-species-constructor');\n\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n","var isObject = require('./_is-object');\nvar isArray = require('./_is-array');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n","'use strict';\nif (require('./_descriptors')) {\n  var LIBRARY = require('./_library');\n  var global = require('./_global');\n  var fails = require('./_fails');\n  var $export = require('./_export');\n  var $typed = require('./_typed');\n  var $buffer = require('./_typed-buffer');\n  var ctx = require('./_ctx');\n  var anInstance = require('./_an-instance');\n  var propertyDesc = require('./_property-desc');\n  var hide = require('./_hide');\n  var redefineAll = require('./_redefine-all');\n  var toInteger = require('./_to-integer');\n  var toLength = require('./_to-length');\n  var toIndex = require('./_to-index');\n  var toAbsoluteIndex = require('./_to-absolute-index');\n  var toPrimitive = require('./_to-primitive');\n  var has = require('./_has');\n  var classof = require('./_classof');\n  var isObject = require('./_is-object');\n  var toObject = require('./_to-object');\n  var isArrayIter = require('./_is-array-iter');\n  var create = require('./_object-create');\n  var getPrototypeOf = require('./_object-gpo');\n  var gOPN = require('./_object-gopn').f;\n  var getIterFn = require('./core.get-iterator-method');\n  var uid = require('./_uid');\n  var wks = require('./_wks');\n  var createArrayMethod = require('./_array-methods');\n  var createArrayIncludes = require('./_array-includes');\n  var speciesConstructor = require('./_species-constructor');\n  var ArrayIterators = require('./es6.array.iterator');\n  var Iterators = require('./_iterators');\n  var $iterDetect = require('./_iter-detect');\n  var setSpecies = require('./_set-species');\n  var arrayFill = require('./_array-fill');\n  var arrayCopyWithin = require('./_array-copy-within');\n  var $DP = require('./_object-dp');\n  var $GOPD = require('./_object-gopd');\n  var dP = $DP.f;\n  var gOPD = $GOPD.f;\n  var RangeError = global.RangeError;\n  var TypeError = global.TypeError;\n  var Uint8Array = global.Uint8Array;\n  var ARRAY_BUFFER = 'ArrayBuffer';\n  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;\n  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';\n  var PROTOTYPE = 'prototype';\n  var ArrayProto = Array[PROTOTYPE];\n  var $ArrayBuffer = $buffer.ArrayBuffer;\n  var $DataView = $buffer.DataView;\n  var arrayForEach = createArrayMethod(0);\n  var arrayFilter = createArrayMethod(2);\n  var arraySome = createArrayMethod(3);\n  var arrayEvery = createArrayMethod(4);\n  var arrayFind = createArrayMethod(5);\n  var arrayFindIndex = createArrayMethod(6);\n  var arrayIncludes = createArrayIncludes(true);\n  var arrayIndexOf = createArrayIncludes(false);\n  var arrayValues = ArrayIterators.values;\n  var arrayKeys = ArrayIterators.keys;\n  var arrayEntries = ArrayIterators.entries;\n  var arrayLastIndexOf = ArrayProto.lastIndexOf;\n  var arrayReduce = ArrayProto.reduce;\n  var arrayReduceRight = ArrayProto.reduceRight;\n  var arrayJoin = ArrayProto.join;\n  var arraySort = ArrayProto.sort;\n  var arraySlice = ArrayProto.slice;\n  var arrayToString = ArrayProto.toString;\n  var arrayToLocaleString = ArrayProto.toLocaleString;\n  var ITERATOR = wks('iterator');\n  var TAG = wks('toStringTag');\n  var TYPED_CONSTRUCTOR = uid('typed_constructor');\n  var DEF_CONSTRUCTOR = uid('def_constructor');\n  var ALL_CONSTRUCTORS = $typed.CONSTR;\n  var TYPED_ARRAY = $typed.TYPED;\n  var VIEW = $typed.VIEW;\n  var WRONG_LENGTH = 'Wrong length!';\n\n  var $map = createArrayMethod(1, function (O, length) {\n    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);\n  });\n\n  var LITTLE_ENDIAN = fails(function () {\n    // eslint-disable-next-line no-undef\n    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;\n  });\n\n  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {\n    new Uint8Array(1).set({});\n  });\n\n  var toOffset = function (it, BYTES) {\n    var offset = toInteger(it);\n    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');\n    return offset;\n  };\n\n  var validate = function (it) {\n    if (isObject(it) && TYPED_ARRAY in it) return it;\n    throw TypeError(it + ' is not a typed array!');\n  };\n\n  var allocate = function (C, length) {\n    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {\n      throw TypeError('It is not a typed array constructor!');\n    } return new C(length);\n  };\n\n  var speciesFromList = function (O, list) {\n    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);\n  };\n\n  var fromList = function (C, list) {\n    var index = 0;\n    var length = list.length;\n    var result = allocate(C, length);\n    while (length > index) result[index] = list[index++];\n    return result;\n  };\n\n  var addGetter = function (it, key, internal) {\n    dP(it, key, { get: function () { return this._d[internal]; } });\n  };\n\n  var $from = function from(source /* , mapfn, thisArg */) {\n    var O = toObject(source);\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var iterFn = getIterFn(O);\n    var i, length, values, result, step, iterator;\n    if (iterFn != undefined && !isArrayIter(iterFn)) {\n      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {\n        values.push(step.value);\n      } O = values;\n    }\n    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);\n    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {\n      result[i] = mapping ? mapfn(O[i], i) : O[i];\n    }\n    return result;\n  };\n\n  var $of = function of(/* ...items */) {\n    var index = 0;\n    var length = arguments.length;\n    var result = allocate(this, length);\n    while (length > index) result[index] = arguments[index++];\n    return result;\n  };\n\n  // iOS Safari 6.x fails here\n  var TO_LOCALE_BUG = !!Uint8Array && fails(function () { arrayToLocaleString.call(new Uint8Array(1)); });\n\n  var $toLocaleString = function toLocaleString() {\n    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);\n  };\n\n  var proto = {\n    copyWithin: function copyWithin(target, start /* , end */) {\n      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);\n    },\n    every: function every(callbackfn /* , thisArg */) {\n      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    fill: function fill(value /* , start, end */) { // eslint-disable-line no-unused-vars\n      return arrayFill.apply(validate(this), arguments);\n    },\n    filter: function filter(callbackfn /* , thisArg */) {\n      return speciesFromList(this, arrayFilter(validate(this), callbackfn,\n        arguments.length > 1 ? arguments[1] : undefined));\n    },\n    find: function find(predicate /* , thisArg */) {\n      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    findIndex: function findIndex(predicate /* , thisArg */) {\n      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    forEach: function forEach(callbackfn /* , thisArg */) {\n      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    indexOf: function indexOf(searchElement /* , fromIndex */) {\n      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    includes: function includes(searchElement /* , fromIndex */) {\n      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    join: function join(separator) { // eslint-disable-line no-unused-vars\n      return arrayJoin.apply(validate(this), arguments);\n    },\n    lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */) { // eslint-disable-line no-unused-vars\n      return arrayLastIndexOf.apply(validate(this), arguments);\n    },\n    map: function map(mapfn /* , thisArg */) {\n      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    reduce: function reduce(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars\n      return arrayReduce.apply(validate(this), arguments);\n    },\n    reduceRight: function reduceRight(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars\n      return arrayReduceRight.apply(validate(this), arguments);\n    },\n    reverse: function reverse() {\n      var that = this;\n      var length = validate(that).length;\n      var middle = Math.floor(length / 2);\n      var index = 0;\n      var value;\n      while (index < middle) {\n        value = that[index];\n        that[index++] = that[--length];\n        that[length] = value;\n      } return that;\n    },\n    some: function some(callbackfn /* , thisArg */) {\n      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    sort: function sort(comparefn) {\n      return arraySort.call(validate(this), comparefn);\n    },\n    subarray: function subarray(begin, end) {\n      var O = validate(this);\n      var length = O.length;\n      var $begin = toAbsoluteIndex(begin, length);\n      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(\n        O.buffer,\n        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,\n        toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin)\n      );\n    }\n  };\n\n  var $slice = function slice(start, end) {\n    return speciesFromList(this, arraySlice.call(validate(this), start, end));\n  };\n\n  var $set = function set(arrayLike /* , offset */) {\n    validate(this);\n    var offset = toOffset(arguments[1], 1);\n    var length = this.length;\n    var src = toObject(arrayLike);\n    var len = toLength(src.length);\n    var index = 0;\n    if (len + offset > length) throw RangeError(WRONG_LENGTH);\n    while (index < len) this[offset + index] = src[index++];\n  };\n\n  var $iterators = {\n    entries: function entries() {\n      return arrayEntries.call(validate(this));\n    },\n    keys: function keys() {\n      return arrayKeys.call(validate(this));\n    },\n    values: function values() {\n      return arrayValues.call(validate(this));\n    }\n  };\n\n  var isTAIndex = function (target, key) {\n    return isObject(target)\n      && target[TYPED_ARRAY]\n      && typeof key != 'symbol'\n      && key in target\n      && String(+key) == String(key);\n  };\n  var $getDesc = function getOwnPropertyDescriptor(target, key) {\n    return isTAIndex(target, key = toPrimitive(key, true))\n      ? propertyDesc(2, target[key])\n      : gOPD(target, key);\n  };\n  var $setDesc = function defineProperty(target, key, desc) {\n    if (isTAIndex(target, key = toPrimitive(key, true))\n      && isObject(desc)\n      && has(desc, 'value')\n      && !has(desc, 'get')\n      && !has(desc, 'set')\n      // TODO: add validation descriptor w/o calling accessors\n      && !desc.configurable\n      && (!has(desc, 'writable') || desc.writable)\n      && (!has(desc, 'enumerable') || desc.enumerable)\n    ) {\n      target[key] = desc.value;\n      return target;\n    } return dP(target, key, desc);\n  };\n\n  if (!ALL_CONSTRUCTORS) {\n    $GOPD.f = $getDesc;\n    $DP.f = $setDesc;\n  }\n\n  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {\n    getOwnPropertyDescriptor: $getDesc,\n    defineProperty: $setDesc\n  });\n\n  if (fails(function () { arrayToString.call({}); })) {\n    arrayToString = arrayToLocaleString = function toString() {\n      return arrayJoin.call(this);\n    };\n  }\n\n  var $TypedArrayPrototype$ = redefineAll({}, proto);\n  redefineAll($TypedArrayPrototype$, $iterators);\n  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);\n  redefineAll($TypedArrayPrototype$, {\n    slice: $slice,\n    set: $set,\n    constructor: function () { /* noop */ },\n    toString: arrayToString,\n    toLocaleString: $toLocaleString\n  });\n  addGetter($TypedArrayPrototype$, 'buffer', 'b');\n  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');\n  addGetter($TypedArrayPrototype$, 'byteLength', 'l');\n  addGetter($TypedArrayPrototype$, 'length', 'e');\n  dP($TypedArrayPrototype$, TAG, {\n    get: function () { return this[TYPED_ARRAY]; }\n  });\n\n  // eslint-disable-next-line max-statements\n  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {\n    CLAMPED = !!CLAMPED;\n    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';\n    var GETTER = 'get' + KEY;\n    var SETTER = 'set' + KEY;\n    var TypedArray = global[NAME];\n    var Base = TypedArray || {};\n    var TAC = TypedArray && getPrototypeOf(TypedArray);\n    var FORCED = !TypedArray || !$typed.ABV;\n    var O = {};\n    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];\n    var getter = function (that, index) {\n      var data = that._d;\n      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);\n    };\n    var setter = function (that, index, value) {\n      var data = that._d;\n      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;\n      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);\n    };\n    var addElement = function (that, index) {\n      dP(that, index, {\n        get: function () {\n          return getter(this, index);\n        },\n        set: function (value) {\n          return setter(this, index, value);\n        },\n        enumerable: true\n      });\n    };\n    if (FORCED) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME, '_d');\n        var index = 0;\n        var offset = 0;\n        var buffer, byteLength, length, klass;\n        if (!isObject(data)) {\n          length = toIndex(data);\n          byteLength = length * BYTES;\n          buffer = new $ArrayBuffer(byteLength);\n        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          buffer = data;\n          offset = toOffset($offset, BYTES);\n          var $len = data.byteLength;\n          if ($length === undefined) {\n            if ($len % BYTES) throw RangeError(WRONG_LENGTH);\n            byteLength = $len - offset;\n            if (byteLength < 0) throw RangeError(WRONG_LENGTH);\n          } else {\n            byteLength = toLength($length) * BYTES;\n            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);\n          }\n          length = byteLength / BYTES;\n        } else if (TYPED_ARRAY in data) {\n          return fromList(TypedArray, data);\n        } else {\n          return $from.call(TypedArray, data);\n        }\n        hide(that, '_d', {\n          b: buffer,\n          o: offset,\n          l: byteLength,\n          e: length,\n          v: new $DataView(buffer)\n        });\n        while (index < length) addElement(that, index++);\n      });\n      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);\n      hide(TypedArrayPrototype, 'constructor', TypedArray);\n    } else if (!fails(function () {\n      TypedArray(1);\n    }) || !fails(function () {\n      new TypedArray(-1); // eslint-disable-line no-new\n    }) || !$iterDetect(function (iter) {\n      new TypedArray(); // eslint-disable-line no-new\n      new TypedArray(null); // eslint-disable-line no-new\n      new TypedArray(1.5); // eslint-disable-line no-new\n      new TypedArray(iter); // eslint-disable-line no-new\n    }, true)) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME);\n        var klass;\n        // `ws` module bug, temporarily remove validation length for Uint8Array\n        // https://github.com/websockets/ws/pull/645\n        if (!isObject(data)) return new Base(toIndex(data));\n        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          return $length !== undefined\n            ? new Base(data, toOffset($offset, BYTES), $length)\n            : $offset !== undefined\n              ? new Base(data, toOffset($offset, BYTES))\n              : new Base(data);\n        }\n        if (TYPED_ARRAY in data) return fromList(TypedArray, data);\n        return $from.call(TypedArray, data);\n      });\n      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {\n        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);\n      });\n      TypedArray[PROTOTYPE] = TypedArrayPrototype;\n      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;\n    }\n    var $nativeIterator = TypedArrayPrototype[ITERATOR];\n    var CORRECT_ITER_NAME = !!$nativeIterator\n      && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);\n    var $iterator = $iterators.values;\n    hide(TypedArray, TYPED_CONSTRUCTOR, true);\n    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);\n    hide(TypedArrayPrototype, VIEW, true);\n    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);\n\n    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {\n      dP(TypedArrayPrototype, TAG, {\n        get: function () { return NAME; }\n      });\n    }\n\n    O[NAME] = TypedArray;\n\n    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);\n\n    $export($export.S, NAME, {\n      BYTES_PER_ELEMENT: BYTES\n    });\n\n    $export($export.S + $export.F * fails(function () { Base.of.call(TypedArray, 1); }), NAME, {\n      from: $from,\n      of: $of\n    });\n\n    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);\n\n    $export($export.P, NAME, proto);\n\n    setSpecies(NAME);\n\n    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });\n\n    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);\n\n    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;\n\n    $export($export.P + $export.F * fails(function () {\n      new TypedArray(1).slice();\n    }), NAME, { slice: $slice });\n\n    $export($export.P + $export.F * (fails(function () {\n      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();\n    }) || !fails(function () {\n      TypedArrayPrototype.toLocaleString.call([1, 2]);\n    })), NAME, { toLocaleString: $toLocaleString });\n\n    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;\n    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);\n  };\n} else module.exports = function () { /* empty */ };\n","'use strict';\nvar global = require('./_global');\nvar DESCRIPTORS = require('./_descriptors');\nvar LIBRARY = require('./_library');\nvar $typed = require('./_typed');\nvar hide = require('./_hide');\nvar redefineAll = require('./_redefine-all');\nvar fails = require('./_fails');\nvar anInstance = require('./_an-instance');\nvar toInteger = require('./_to-integer');\nvar toLength = require('./_to-length');\nvar toIndex = require('./_to-index');\nvar gOPN = require('./_object-gopn').f;\nvar dP = require('./_object-dp').f;\nvar arrayFill = require('./_array-fill');\nvar setToStringTag = require('./_set-to-string-tag');\nvar ARRAY_BUFFER = 'ArrayBuffer';\nvar DATA_VIEW = 'DataView';\nvar PROTOTYPE = 'prototype';\nvar WRONG_LENGTH = 'Wrong length!';\nvar WRONG_INDEX = 'Wrong index!';\nvar $ArrayBuffer = global[ARRAY_BUFFER];\nvar $DataView = global[DATA_VIEW];\nvar Math = global.Math;\nvar RangeError = global.RangeError;\n// eslint-disable-next-line no-shadow-restricted-names\nvar Infinity = global.Infinity;\nvar BaseBuffer = $ArrayBuffer;\nvar abs = Math.abs;\nvar pow = Math.pow;\nvar floor = Math.floor;\nvar log = Math.log;\nvar LN2 = Math.LN2;\nvar BUFFER = 'buffer';\nvar BYTE_LENGTH = 'byteLength';\nvar BYTE_OFFSET = 'byteOffset';\nvar $BUFFER = DESCRIPTORS ? '_b' : BUFFER;\nvar $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;\nvar $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;\n\n// IEEE754 conversions based on https://github.com/feross/ieee754\nfunction packIEEE754(value, mLen, nBytes) {\n  var buffer = new Array(nBytes);\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;\n  var i = 0;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  var e, m, c;\n  value = abs(value);\n  // eslint-disable-next-line no-self-compare\n  if (value != value || value === Infinity) {\n    // eslint-disable-next-line no-self-compare\n    m = value != value ? 1 : 0;\n    e = eMax;\n  } else {\n    e = floor(log(value) / LN2);\n    if (value * (c = pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * pow(2, eBias - 1) * pow(2, mLen);\n      e = 0;\n    }\n  }\n  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);\n  e = e << mLen | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);\n  buffer[--i] |= s * 128;\n  return buffer;\n}\nfunction unpackIEEE754(buffer, mLen, nBytes) {\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = eLen - 7;\n  var i = nBytes - 1;\n  var s = buffer[i--];\n  var e = s & 127;\n  var m;\n  s >>= 7;\n  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : s ? -Infinity : Infinity;\n  } else {\n    m = m + pow(2, mLen);\n    e = e - eBias;\n  } return (s ? -1 : 1) * m * pow(2, e - mLen);\n}\n\nfunction unpackI32(bytes) {\n  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];\n}\nfunction packI8(it) {\n  return [it & 0xff];\n}\nfunction packI16(it) {\n  return [it & 0xff, it >> 8 & 0xff];\n}\nfunction packI32(it) {\n  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];\n}\nfunction packF64(it) {\n  return packIEEE754(it, 52, 8);\n}\nfunction packF32(it) {\n  return packIEEE754(it, 23, 4);\n}\n\nfunction addGetter(C, key, internal) {\n  dP(C[PROTOTYPE], key, { get: function () { return this[internal]; } });\n}\n\nfunction get(view, bytes, index, isLittleEndian) {\n  var numIndex = +index;\n  var intIndex = toIndex(numIndex);\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b;\n  var start = intIndex + view[$OFFSET];\n  var pack = store.slice(start, start + bytes);\n  return isLittleEndian ? pack : pack.reverse();\n}\nfunction set(view, bytes, index, conversion, value, isLittleEndian) {\n  var numIndex = +index;\n  var intIndex = toIndex(numIndex);\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b;\n  var start = intIndex + view[$OFFSET];\n  var pack = conversion(+value);\n  for (var i = 0; i < bytes; i++) store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];\n}\n\nif (!$typed.ABV) {\n  $ArrayBuffer = function ArrayBuffer(length) {\n    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);\n    var byteLength = toIndex(length);\n    this._b = arrayFill.call(new Array(byteLength), 0);\n    this[$LENGTH] = byteLength;\n  };\n\n  $DataView = function DataView(buffer, byteOffset, byteLength) {\n    anInstance(this, $DataView, DATA_VIEW);\n    anInstance(buffer, $ArrayBuffer, DATA_VIEW);\n    var bufferLength = buffer[$LENGTH];\n    var offset = toInteger(byteOffset);\n    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');\n    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);\n    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);\n    this[$BUFFER] = buffer;\n    this[$OFFSET] = offset;\n    this[$LENGTH] = byteLength;\n  };\n\n  if (DESCRIPTORS) {\n    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');\n    addGetter($DataView, BUFFER, '_b');\n    addGetter($DataView, BYTE_LENGTH, '_l');\n    addGetter($DataView, BYTE_OFFSET, '_o');\n  }\n\n  redefineAll($DataView[PROTOTYPE], {\n    getInt8: function getInt8(byteOffset) {\n      return get(this, 1, byteOffset)[0] << 24 >> 24;\n    },\n    getUint8: function getUint8(byteOffset) {\n      return get(this, 1, byteOffset)[0];\n    },\n    getInt16: function getInt16(byteOffset /* , littleEndian */) {\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;\n    },\n    getUint16: function getUint16(byteOffset /* , littleEndian */) {\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return bytes[1] << 8 | bytes[0];\n    },\n    getInt32: function getInt32(byteOffset /* , littleEndian */) {\n      return unpackI32(get(this, 4, byteOffset, arguments[1]));\n    },\n    getUint32: function getUint32(byteOffset /* , littleEndian */) {\n      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;\n    },\n    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {\n      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);\n    },\n    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {\n      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);\n    },\n    setInt8: function setInt8(byteOffset, value) {\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packF32, value, arguments[2]);\n    },\n    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {\n      set(this, 8, byteOffset, packF64, value, arguments[2]);\n    }\n  });\n} else {\n  if (!fails(function () {\n    $ArrayBuffer(1);\n  }) || !fails(function () {\n    new $ArrayBuffer(-1); // eslint-disable-line no-new\n  }) || fails(function () {\n    new $ArrayBuffer(); // eslint-disable-line no-new\n    new $ArrayBuffer(1.5); // eslint-disable-line no-new\n    new $ArrayBuffer(NaN); // eslint-disable-line no-new\n    return $ArrayBuffer.name != ARRAY_BUFFER;\n  })) {\n    $ArrayBuffer = function ArrayBuffer(length) {\n      anInstance(this, $ArrayBuffer);\n      return new BaseBuffer(toIndex(length));\n    };\n    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];\n    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {\n      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);\n    }\n    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;\n  }\n  // iOS Safari 7.x bug\n  var view = new $DataView(new $ArrayBuffer(2));\n  var $setInt8 = $DataView[PROTOTYPE].setInt8;\n  view.setInt8(0, 2147483648);\n  view.setInt8(1, 2147483649);\n  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {\n    setInt8: function setInt8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    }\n  }, true);\n}\nsetToStringTag($ArrayBuffer, ARRAY_BUFFER);\nsetToStringTag($DataView, DATA_VIEW);\nhide($DataView[PROTOTYPE], $typed.VIEW, true);\nexports[ARRAY_BUFFER] = $ArrayBuffer;\nexports[DATA_VIEW] = $DataView;\n"],"sourceRoot":""}